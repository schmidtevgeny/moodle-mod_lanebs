{"version":3,"sources":["../src/modal_constructor.js"],"names":["define","exports","$","ajax","ModalFactory","ModalEvents","Notification","Modal","CustomEvents","ModalRegistry","ModalConstructor","root","call","TYPE","prototype","Object","create","constructor","breadcrumbs","SCRIPT_BUTTON","registerEventListeners","getRoot","on","hidden","destroy","bind","getAjaxCall","methodname","args","callback","then","response","done","JSON","parse","fail","console","log","register"],"mappings":"AAAAA,OAAM,gCAAC,CACH,SADG,CAEH,QAFG,CAGH,WAHG,CAIH,oBAJG,CAKH,mBALG,CAMH,mBANG,CAOH,YAPG,CAQH,gCARG,CASH,qBATG,CAAD,CAUH,SACCC,CADD,CAECC,CAFD,CAGCC,CAHD,CAICC,CAJD,CAKCC,CALD,CAMCC,CAND,CAOCC,CAPD,CAQCC,CARD,CASCC,CATD,CAUD,CAME,GAAIC,CAAAA,CAAgB,CAAG,SAASC,CAAT,CAAe,CAClCJ,CAAK,CAACK,IAAN,CAAW,IAAX,CAAiBD,CAAjB,CACH,CAFD,CAIAD,CAAgB,CAACG,IAAjB,CAAwB,wBAAxB,CACAH,CAAgB,CAACI,SAAjB,CAA6BC,MAAM,CAACC,MAAP,CAAcT,CAAK,CAACO,SAApB,CAA7B,CACAJ,CAAgB,CAACI,SAAjB,CAA2BG,WAA3B,CAAyCP,CAAzC,CACAA,CAAgB,CAACI,SAAjB,CAA2BI,WAA3B,CAAyC,EAAzC,CACAR,CAAgB,CAACS,aAAjB,CAAiC,gBAAjC,CAOAT,CAAgB,CAACI,SAAjB,CAA2BM,sBAA3B,CAAoD,UAAY,CAC5Db,CAAK,CAACO,SAAN,CAAgBM,sBAAhB,CAAuCR,IAAvC,CAA4C,IAA5C,EAEA,KAAKS,OAAL,GAAeC,EAAf,CAAkBjB,CAAW,CAACkB,MAA9B,CAAsC,UAAY,CAC9C,KAAKC,OAAL,EACH,CAFqC,CAEpCC,IAFoC,CAE/B,IAF+B,CAAtC,CAIH,CAPD,CASAf,CAAgB,CAACI,SAAjB,CAA2BY,WAA3B,CAAyC,SAAUC,CAAV,CAAsBC,CAAtB,CAA4BC,CAA5B,CAAsC,CAC3E,MAAO1B,CAAAA,CAAI,CAACS,IAAL,CAAU,CACb,CACIe,UAAU,CAAEA,CADhB,CAEIC,IAAI,CAAJA,CAFJ,CADa,CAAV,EAKJ,CALI,EAKDE,IALC,CAKI,SAASC,CAAT,CAAmB,CAC1B,MAAOA,CAAAA,CACV,CAPM,EAOJC,IAPI,CAOC,SAASD,CAAT,CAAmB,CACvBF,CAAQ,CAACI,IAAI,CAACC,KAAL,CAAWH,CAAQ,KAAnB,CAAD,CAAR,CACA,QACH,CAVM,EAUJI,IAVI,CAUC,SAAUJ,CAAV,CAAoB,CACxBK,OAAO,CAACC,GAAR,CAAYN,CAAZ,EACAF,CAAQ,CAAC,CAAC,QAAD,CAAgB,KAAQ,GAAxB,CAA6B,QAAW,OAAxC,CAAD,CAAR,CACA,QACH,CAdM,CAeV,CAhBD,CAkBApB,CAAa,CAAC6B,QAAd,CAAuB5B,CAAgB,CAACG,IAAxC,CAA8CH,CAA9C,CAAgE,8BAAhE,EAEA,MAAOA,CAAAA,CACV,CAvEK,CAAN","sourcesContent":["define([\n    \"exports\",\n    \"jquery\",\n    \"core/ajax\",\n    \"core/modal_factory\",\n    \"core/modal_events\",\n    \"core/notification\",\n    \"core/modal\",\n    \"core/custom_interaction_events\",\n    \"core/modal_registry\",\n], function (\n    exports,\n    $,\n    ajax,\n    ModalFactory,\n    ModalEvents,\n    Notification,\n    Modal,\n    CustomEvents,\n    ModalRegistry,\n) {\n\n    /**\n     * Constructor for the Modal\n     *\n     */\n    let ModalConstructor = function(root) {\n        Modal.call(this, root);\n    };\n\n    ModalConstructor.TYPE = 'mod_lanebs_constructor';\n    ModalConstructor.prototype = Object.create(Modal.prototype);\n    ModalConstructor.prototype.constructor = ModalConstructor;\n    ModalConstructor.prototype.breadcrumbs = {};\n    ModalConstructor.SCRIPT_BUTTON = '#script_button';\n\n    let SELECTORS = {\n        'SCRIPT_BUTTON': '#script_button',\n        'APP_CONTAINER': 'div#app_container',\n    };\n\n    ModalConstructor.prototype.registerEventListeners = function () {\n        Modal.prototype.registerEventListeners.call(this);\n\n        this.getRoot().on(ModalEvents.hidden, function () {\n            this.destroy();\n        }.bind(this));\n\n    };\n\n    ModalConstructor.prototype.getAjaxCall = function (methodname, args, callback) {\n        return ajax.call([\n            {\n                methodname: methodname,\n                args,\n            }\n        ])[0].then(function(response) {\n            return response;\n        }).done(function(response) {\n            callback(JSON.parse(response['body']));\n            return true;\n        }).fail(function (response) {\n            console.log(response);\n            callback({'error': true, 'code': 500, 'message': 'error'});\n            return false;\n        });\n    };\n\n    ModalRegistry.register(ModalConstructor.TYPE, ModalConstructor, 'mod_lanebs/modal_constructor');\n\n    return ModalConstructor;\n});"],"file":"modal_constructor.min.js"}